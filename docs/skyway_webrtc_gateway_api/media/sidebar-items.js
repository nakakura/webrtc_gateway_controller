initSidebarItems({"enum":[["MediaConnectionEventEnum","Shows DataConnection events."]],"fn":[["answer","Have WebRTC Gateway accept to a request of establishing MediaConnection from neighbours."],["call","Have WebRTC Gateway start establishing MediaConnection to neighbour."],["delete_media","Have WebRTC Gateway close a media socket."],["delete_rtcp","Have WebRTC Gateway close a rtcp socket."],["disconnect","Have WebRTC Gateway close a MediaConnection"],["listen_events","Request status of MediaConnection"],["open_media_socket","Have WebRTC Gateway open a socket for feeding media."],["open_rtcp_socket","Have WebRTC Gateway open a socket for feeding rtcp."],["send_pli","Have WebRTC Gateway send a PLI(Picture Less Indication) packet"],["status","Request status of MediaConnection"]],"struct":[["AnswerQuery","Query parameter for POST /media/connections"],["AnswerResponse","Response from POST /media/connections"],["AnswerResponseParams","Shows media_ids used in this MediaConnection"],["CallQuery","Query parameter for POST /media/connections"],["CallResponse","Response from POST /media/connections"],["Constraints","Parameters for MediaConnection"],["MediaConnectionIdWrapper","Wrapper for serializing JSON"],["MediaConnectionStatus","Status of MediaConnection"],["MediaParams","Parameters for sending media"],["RedirectParameters","Shows to which socket media should be redirected."],["SsrcPair","Shows ssrc(Synchrozination Source) information"]]});